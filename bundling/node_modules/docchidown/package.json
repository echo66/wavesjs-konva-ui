{
  "name": "docchidown",
  "version": "0.0.1",
  "description": "ES6 JSDoc to markdown utils",
  "main": "docchidown.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": {
    "name": "Samuel Goldszmidt",
    "email": "samuel.goldszmidt@gmail.com"
  },
  "license": "ISC",
  "dependencies": {
    "handlebars": "^3.0.3",
    "minimist": "^1.1.1",
    "mustache": "^2.1.2",
    "swig": "^1.4.2",
    "underscore": "^1.8.3"
  },
  "bin": {
    "docchidown": "./bin/docchidown"
  },
  "gitHead": "7fe30deb405cd28a5eef10a4eb9c3f7cd6cb9228",
  "readme": "# DocchiDown\n\nUtil to produce Markdown from json produced by [Docchi](https://github.com/daliwali/docchi) from jsdoc.\n\nThe interesting fact here is that Docchi is working in ES6.\n\n```\ndocchi < ./path/to/es6/es2015/js | docchidown | mustache - node_modules/docchidown/jsdoc.template > output.md\n```\n\n\n## Example usage\n\n### Command Line\n\n\n\n### API\n\n```\ndocchidown.parse({\n  // the output from docchi (mandatory)\n  source: docchiDoc.out({ render: false }),\n  // defaults to 'json'\n  outputType: 'markdown',\n  // the file in which write the result (relative to `process.cwd()`)\n  destination: './path/to/file',\n});\n```\n\n`docchidown.parse` returns a Promise so you can also :\n\n```\ndocchidown\n  .parse(options)\n  .then(function(result) {\n    doSomethingWithResult(result);\n  });\n```\n\n\n",
  "readmeFilename": "README.md",
  "_id": "docchidown@0.0.1",
  "_shasum": "556fd3434b0e6937e076a77610cea2d2431177a7",
  "_from": "git://github.com/ouhouhsami/docchidown.git",
  "_resolved": "git://github.com/ouhouhsami/docchidown.git#7fe30deb405cd28a5eef10a4eb9c3f7cd6cb9228"
}
